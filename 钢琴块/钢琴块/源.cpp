#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <easyx.h> //Í¼ÐÎ¿â£¬»æÖÆÍ¼ÐÎ£¬Êä³öÎÄ×Ö
#include <stdlib.h>
#include <time.h>
#include <mmsystem.h>
#pragma comment(lib,"winmm.lib")
//#define INTERVAL 100 //±êÌâµÄ¸ß¶È
//#define GRID_W   100 //Ã¿¸ö¸ñ×ÓµÄ¿í¶È£ºx
//#define GRID_H   150 //Ã¿¸ö¸ñ×ÓµÄ¸ß¶È£ºy

//¶¨ÒåÊý×é£¬ÓÃÀ´´æ´¢ºÚ¿é
int flags[4] = { 2,1,0,3 };
//Í³¼Æ³É¹¦µãÁË¶àÉÙ¸öºÚ¿é
int gcount = 0;
//³õÊ¼»¯Êý¾Ý
void init()
{
	//ÉèÖÃËæ»úÊýÖÖ×Ó
	srand(time(NULL));
	//Ëæ»úÉú³ÉºÚ¿é
	for (int i = 0; i < 4; i++)
	{
		flags[i] = rand() % 4;//0,1,2,3
	}
}

void draw()
{
	//ÉèÖÃÏßÌõÑùÊ½
	setlinestyle(PS_SOLID, 2);//ÏßÌõÐÎÊ½£¨ÊµÏß£¬ÐéÏß...)£¬ÏßÌõ´ÖÏ¸
	//ÉèÖÃÏßÌõÑÕÉ«£¬Ä¬ÈÏÎª°×É«
	setlinecolor(BLACK);

	for (int i = 0; i < 5; i++)
	{
		//»æÖÆÏßÌõ
		//»­ºáÏß
		line(0, i * 150 + 100, 400, i * 150 + 100);
		//»­ÊúÏß
		line(i * 100, 100, i * 100, 700);
	}

	//ÉèÖÃÎÄ×ÖÑùÊ½
	settextstyle(50, 0, _T("Î¢ÈíÑÅºÚ"));//ÉèÖÃÎÄ×Ö³¤£¬¿í£¬×ÖÌåÑùÊ½
	//ÉèÖÃÎÄ×ÖÑÕÉ«
	settextcolor(BLACK);
	//Êä³ö±êÌâ
	outtextxy(100, 25, _T("ÄãºÃ£¬Ç×Ç×"));

	//¸ù¾ÝflagsÊý×é»æÖÆºÚ¿é
	for (int i = 0; i < 4; i++)
	{
		//Çó³öºÚ¿éµÄ×óÉÏ½ÇµÄ×ø±ê
		int x = flags[i] * 100;
		int y = i * 150 + 100;
		//ÉèÖÃÌî³äÑÕÉ«
		setfillcolor(BLACK);
		//»æÖÆÒ»¸ö¾ØÐÎ
		fillrectangle(x, y, x + 100, y + 150);
	}

}
//´¦ÀíÊó±êµã»÷
bool mousePressMsg(ExMessage* msg)
{
	//»ñÈ¡ÏÂ±êÎª3µÄºÚ¿éµÄ×ø±ê
	int x = flags[3] * 100;
	int y = 3 * 150 + 100;
	//ÅÐ¶ÏÊÇ²»ÊÇµã»÷µÄÏÂ±êÎª2µÄºÚ¿é
	if (msg->x > x && msg->x < x + 100 && msg->y > y && msg->y < y + 150)
	{
		//ºÚ¿é´ÓÉÏÍùÏÂÒÆ¶¯
		for (int i = 3; i > 0; i--)
		{
			flags[i] = flags[i - 1];
		}
		flags[0] = rand() % 4;
		gcount++;
		printf("°®ÄãÓ´,Score:%d\n", gcount);
		switch (gcount)
		{
		case 1:
			mciSendString(_T("open ¸ÖÇÙÇú1.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú1.mp3"), 0, 0, 0);
			break;
		case 2:
			mciSendString(_T("open ¸ÖÇÙÇú2.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú2.mp3"), 0, 0, 0);
			break;
		case 3:
			mciSendString(_T("open ¸ÖÇÙÇú3.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú3.mp3"), 0, 0, 0);
			break;
		case 4:
			mciSendString(_T("open ¸ÖÇÙÇú4.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú4.mp3"), 0, 0, 0);
			break;
		case 5:
			mciSendString(_T("open ¸ÖÇÙÇú5.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú5.mp3"), 0, 0, 0);
			break;
		case 6:
			mciSendString(_T("open ¸ÖÇÙÇú6.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú6.mp3"), 0, 0, 0);
			break;
		case 7:
			mciSendString(_T("open ¸ÖÇÙÇú7.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú7.mp3"), 0, 0, 0);
			break;
		case 8:
			mciSendString(_T("open ¸ÖÇÙÇú8.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú8.mp3"), 0, 0, 0);
			break;
		case 9:
			mciSendString(_T("open ¸ÖÇÙÇú9.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú9.mp3"), 0, 0, 0);
			break;
		case 10:
			mciSendString(_T("open ¸ÖÇÙÇú10.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú10.mp3"), 0, 0, 0);
			break;
		case 11:
			mciSendString(_T("open ¸ÖÇÙÇú11.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú11.mp3"), 0, 0, 0);
			break;
		case 12:
			mciSendString(_T("open ¸ÖÇÙÇú12.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú12.mp3"), 0, 0, 0);
			break;
		case 13:
			mciSendString(_T("open ¸ÖÇÙÇú13.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú13.mp3"), 0, 0, 0);
			break;
		case 14:
			mciSendString(_T("open ¸ÖÇÙÇú14.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú14.mp3"), 0, 0, 0);
			break;
		case 15:
			mciSendString(_T("open ¸ÖÇÙÇú15.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú15.mp3"), 0, 0, 0);
			break;
		case 16:
			mciSendString(_T("open ¸ÖÇÙÇú16.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú16.mp3"), 0, 0, 0);
			break;
		case 17:
			mciSendString(_T("open ¸ÖÇÙÇú17.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú17.mp3"), 0, 0, 0);
			break;
		case 18:
			mciSendString(_T("open ¸ÖÇÙÇú18.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú18.mp3"), 0, 0, 0);
			break;
		case 19:
			mciSendString(_T("open ¸ÖÇÙÇú19.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú19.mp3"), 0, 0, 0);
			break;
		case 20:
			mciSendString(_T("open ¸ÖÇÙÇú20.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú20.mp3"), 0, 0, 0);
			break;
		case 21:
			mciSendString(_T("open ¸ÖÇÙÇú21.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú21.mp3"), 0, 0, 0);
			break;
		case 22:
			mciSendString(_T("open ¸ÖÇÙÇú22.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú22.mp3"), 0, 0, 0);
			break;
		case 23:
			mciSendString(_T("open ¸ÖÇÙÇú23.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú23.mp3"), 0, 0, 0);
			break;
		case 24:
			mciSendString(_T("open ¸ÖÇÙÇú24.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú24.mp3"), 0, 0, 0);
			break;
		case 25:
			mciSendString(_T("open ¸ÖÇÙÇú25.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú25.mp3"), 0, 0, 0);
			break;
		case 26:
			mciSendString(_T("open ¸ÖÇÙÇú26.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú26.mp3"), 0, 0, 0);
			break;
		case 27:
			mciSendString(_T("open ¸ÖÇÙÇú27.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú27.mp3"), 0, 0, 0);
			break;
		case 28:
			mciSendString(_T("open ¸ÖÇÙÇú28.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú28.mp3"), 0, 0, 0);
			break;
		case 29:
			mciSendString(_T("open ¸ÖÇÙÇú29.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú29.mp3"), 0, 0, 0);
			break;
		case 30:
			mciSendString(_T("open ¸ÖÇÙÇú30.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú30.mp3"), 0, 0, 0);
			break;
		case 31:
			mciSendString(_T("open ¸ÖÇÙÇú31.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú31.mp3"), 0, 0, 0);
			break;
		case 32:
			mciSendString(_T("open ¸ÖÇÙÇú32.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú32.mp3"), 0, 0, 0);
			break;
		case 33:
			mciSendString(_T("open ¸ÖÇÙÇú33.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú33.mp3"), 0, 0, 0);
			break;
		case 34:
			mciSendString(_T("open ¸ÖÇÙÇú34.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú34.mp3"), 0, 0, 0);
			break;
		case 35:
			mciSendString(_T("open ¸ÖÇÙÇú35.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú35.mp3"), 0, 0, 0);
			break;
		case 36:
			mciSendString(_T("open ¸ÖÇÙÇú36.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú36.mp3"), 0, 0, 0);
			break;
		case 37:
			mciSendString(_T("open ¸ÖÇÙÇú37.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú37.mp3"), 0, 0, 0);
			break;
		case 38:
			mciSendString(_T("open ¸ÖÇÙÇú38.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú38.mp3"), 0, 0, 0);
			break;
		case 39:
			mciSendString(_T("open ¸ÖÇÙÇú39.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú39.mp3"), 0, 0, 0);
			break;
		case 40:
			mciSendString(_T("open ¸ÖÇÙÇú40.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú40.mp3"), 0, 0, 0);
			break;
		case 41:
			mciSendString(_T("open ¸ÖÇÙÇú41.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú41.mp3"), 0, 0, 0);
			break;
		case 42:
			mciSendString(_T("open ¸ÖÇÙÇú42.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú42.mp3"), 0, 0, 0);
			break;
		case 43:
			mciSendString(_T("open ¸ÖÇÙÇú43.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú43.mp3"), 0, 0, 0);
			break;
		case 44:
			mciSendString(_T("open ¸ÖÇÙÇú44.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú44.mp3"), 0, 0, 0);
			break;
		case 45:
			mciSendString(_T("open ¸ÖÇÙÇú45.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú45.mp3"), 0, 0, 0);
			break;
		case 46:
			mciSendString(_T("open ¸ÖÇÙÇú46.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú46.mp3"), 0, 0, 0);
			break;
		case 47:
			mciSendString(_T("open ¸ÖÇÙÇú47.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú47.mp3"), 0, 0, 0);
			break;
		case 48:
			mciSendString(_T("open ¸ÖÇÙÇú48.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú48.mp3"), 0, 0, 0);
			break;
		case 49:
			mciSendString(_T("open ¸ÖÇÙÇú49.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú49.mp3"), 0, 0, 0);
			break;
		case 50:
			mciSendString(_T("open ¸ÖÇÙÇú50.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú50.mp3"), 0, 0, 0);
			break;
		case 51:
			mciSendString(_T("open ¸ÖÇÙÇú51.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú51.mp3"), 0, 0, 0);
			break;
		case 52:
			mciSendString(_T("open ¸ÖÇÙÇú52.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú52.mp3"), 0, 0, 0);
			break;
		case 53:
			mciSendString(_T("open ¸ÖÇÙÇú53.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú53.mp3"), 0, 0, 0);
			break;
		case 54:
			mciSendString(_T("open ¸ÖÇÙÇú54.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú54.mp3"), 0, 0, 0);
			break;
		case 55:
			mciSendString(_T("open ¸ÖÇÙÇú55.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú55.mp3"), 0, 0, 0);
			break;
		case 56:
			mciSendString(_T("open ¸ÖÇÙÇú56.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú56.mp3"), 0, 0, 0);
			break;
		case 57:
			mciSendString(_T("open ¸ÖÇÙÇú57.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú57.mp3"), 0, 0, 0);
			break;
		case 58:
			mciSendString(_T("open ¸ÖÇÙÇú58.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú58.mp3"), 0, 0, 0);
			break;
		case 59:
			mciSendString(_T("open ¸ÖÇÙÇú59.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú59.mp3"), 0, 0, 0);
			break;
		case 60:
			mciSendString(_T("open ¸ÖÇÙÇú60.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú60.mp3"), 0, 0, 0);
			break;
		case 61:
			mciSendString(_T("open ¸ÖÇÙÇú61.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú61.mp3"), 0, 0, 0);
			break;
		case 62:
			mciSendString(_T("open ¸ÖÇÙÇú62.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú62.mp3"), 0, 0, 0);
			break;
		case 63:
			mciSendString(_T("open ¸ÖÇÙÇú63.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú63.mp3"), 0, 0, 0);
			break;
		case 64:
			mciSendString(_T("open ¸ÖÇÙÇú64.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú64.mp3"), 0, 0, 0);
			break;
		case 65:
			mciSendString(_T("open ¸ÖÇÙÇú65.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú65.mp3"), 0, 0, 0);
			break;
		case 66:
			mciSendString(_T("open ¸ÖÇÙÇú66.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú66.mp3"), 0, 0, 0);
			break;
		case 67:
			mciSendString(_T("open ¸ÖÇÙÇú67.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú67.mp3"), 0, 0, 0);
			break;
		case 68:
			mciSendString(_T("open ¸ÖÇÙÇú68.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú68.mp3"), 0, 0, 0);
			break;
		case 69:
			mciSendString(_T("open ¸ÖÇÙÇú69.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú69.mp3"), 0, 0, 0);
			break;
		case 70:
			mciSendString(_T("open ¸ÖÇÙÇú70.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú70.mp3"), 0, 0, 0);
			break;
		case 71:
			mciSendString(_T("open ¸ÖÇÙÇú71.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú71.mp3"), 0, 0, 0);
			break;
		case 72:
			mciSendString(_T("open ¸ÖÇÙÇú72.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú72.mp3"), 0, 0, 0);
			break;
		case 73:
			mciSendString(_T("open ¸ÖÇÙÇú73.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú73.mp3"), 0, 0, 0);
			break;
		case 74:
			mciSendString(_T("open ¸ÖÇÙÇú74.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú74.mp3"), 0, 0, 0);
			break;
		case 75:
			mciSendString(_T("open ¸ÖÇÙÇú75.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú75.mp3"), 0, 0, 0);
			break;
		case 76:
			mciSendString(_T("open ¸ÖÇÙÇú76.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú76.mp3"), 0, 0, 0);
			break;
		case 77:
			mciSendString(_T("open ¸ÖÇÙÇú77.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú77.mp3"), 0, 0, 0);
			break;
		case 78:
			mciSendString(_T("open ¸ÖÇÙÇú78.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú78.mp3"), 0, 0, 0);
			break;
		case 79:
			mciSendString(_T("open ¸ÖÇÙÇú79.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú79.mp3"), 0, 0, 0);
			break;
		case 80:
			mciSendString(_T("open ¸ÖÇÙÇú80.mp3"), 0, 0, 0);
			mciSendString(_T("play ¸ÖÇÙÇú80.mp3"), 0, 0, 0);
			break;
		default:
			break;
		}
		return true;
	}
	//printf("%s\n", __FUNCTION__);
	return false;
}



int main()
{
	printf("Ê¹ÓÃËµÃ÷£ºÓÃÊó±ê×ó¼üµã»÷×îÏÂ·½Ò»ÐÐµÄºÚ¿é£¬±ã¿ÉÊ¹ÓÎÏ·ÔËÐÐ¡£ÔÚÓÎÏ·ÖÐ¿É°´ESC¼üÍË³öÓÎÏ·¡£¼ÇµÃ¿ªÉùÒôÓ´¡£");
	printf("\n");
	//¿ØÖÆÌ¨´°¿Ú->Í¼ÐÎ´°¿Ú
	initgraph(400, 700, EX_SHOWCONSOLE);//ÉèÖÃÍ¼ÐÎ´°¿ÚµÄ¿íºÍ¸ß£¬²¢ÏÔÊ¾¿ØÖÆÌ¨
	//ÉèÖÃ±³¾°ÑÕÉ«
	setbkcolor(WHITE);
	cleardevice();//Ë¢ÐÂ£¬·ÀÖ¹´°¿ÚÑÕÉ«²»±ä

	init();

	ExMessage msg = { 0 };
	bool isDone = true;
	//ÓÎÏ·Ö÷Ñ­»·
	while (isDone)
	{
		//ÏûÏ¢´¦Àí

		if (peekmessage(&msg))
		{
			//°´ESCÍË³öÓÎÏ·
			switch (msg.message)
			{
			case WM_KEYDOWN:
				if (msg.vkcode == VK_ESCAPE)
				{
					printf("ÏëÄã\n");
					isDone = false;
				}
				break;
			case WM_LBUTTONDOWN:
				if (mousePressMsg(&msg));
				break;

			}
		}
		//»æÖÆ
		BeginBatchDraw();//·ÀÉÁÆÁ
		cleardevice();//ÇåÆÁ
		draw();
		EndBatchDraw();
	}

	//getchar(); //·ÀÖ¹ÉÁÍË
	mciSendString(_T("close all"), 0, 0, 0);//ÊÖ¶¯ÊÍ·ÅÄÚ´æ
	return 0;
}
